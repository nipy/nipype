# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.slicer.legacy.registration import MultiResolutionAffineRegistration

def test_MultiResolutionAffineRegistration_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    fixedImage=dict(argstr='%s',
    position=-2,
    ),
    fixedImageMask=dict(argstr='--fixedImageMask %s',
    ),
    fixedImageROI=dict(argstr='--fixedImageROI %s',
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    metricTolerance=dict(argstr='--metricTolerance %f',
    ),
    movingImage=dict(argstr='%s',
    position=-1,
    ),
    numIterations=dict(argstr='--numIterations %d',
    ),
    numLineIterations=dict(argstr='--numLineIterations %d',
    ),
    resampledImage=dict(argstr='--resampledImage %s',
    hash_files=False,
    ),
    saveTransform=dict(argstr='--saveTransform %s',
    hash_files=False,
    ),
    stepSize=dict(argstr='--stepSize %f',
    ),
    stepTolerance=dict(argstr='--stepTolerance %f',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    )
    inputs = MultiResolutionAffineRegistration.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value

def test_MultiResolutionAffineRegistration_outputs():
    output_map = dict(resampledImage=dict(),
    saveTransform=dict(),
    )
    outputs = MultiResolutionAffineRegistration.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value


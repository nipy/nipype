# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ..utils import Generate5tt


def test_Generate5tt_inputs():
    input_map = dict(
        algorithm=dict(
            argstr="%s",
            mandatory=True,
            position=-3,
        ),
        args=dict(
            argstr="%s",
        ),
        bval_scale=dict(
            argstr="-bvalue_scaling %s",
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        grad_file=dict(
            argstr="-grad %s",
            extensions=None,
            xor=["grad_fsl"],
        ),
        grad_fsl=dict(
            argstr="-fslgrad %s %s",
            xor=["grad_file"],
        ),
        hippocampi=dict(
            argstr="-hippocampi %s",
        ),
        in_bval=dict(
            extensions=None,
        ),
        in_bvec=dict(
            argstr="-fslgrad %s %s",
            extensions=None,
        ),
        in_file=dict(
            argstr="%s",
            mandatory=True,
            position=-2,
        ),
        lut_file=dict(
            argstr="-lut %s",
            extensions=None,
        ),
        mask_file=dict(
            argstr="-mask %s",
            extensions=None,
        ),
        nocrop=dict(
            argstr="-nocrop",
        ),
        nthreads=dict(
            argstr="-nthreads %d",
            nohash=True,
        ),
        out_bval=dict(
            extensions=None,
        ),
        out_bvec=dict(
            argstr="-export_grad_fsl %s %s",
            extensions=None,
        ),
        out_file=dict(
            argstr="%s",
            extensions=None,
            mandatory=True,
            position=-1,
        ),
        premasked=dict(
            argstr="-premasked",
        ),
        sgm_amyg_hipp=dict(
            argstr="-sgm_amyg_hipp",
        ),
        t2_image=dict(
            argstr="-t2 %s",
            extensions=None,
        ),
        template=dict(
            argstr="-template %s",
            extensions=None,
        ),
        white_stem=dict(
            argstr="-white_stem",
        ),
    )
    inputs = Generate5tt.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value


def test_Generate5tt_outputs():
    output_map = dict(
        out_file=dict(
            extensions=None,
        ),
    )
    outputs = Generate5tt.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

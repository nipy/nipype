# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from .....testing import assert_equal
from ..gtract import gtractCostFastMarching


def test_gtractCostFastMarching_inputs():
    input_map = dict(anisotropyWeight=dict(argstr='--anisotropyWeight %f',
    ),
    args=dict(argstr='%s',
    ),
    inputAnisotropyVolume=dict(argstr='--inputAnisotropyVolume %s',
    ),
    inputStartingSeedsLabelMapVolume=dict(argstr='--inputStartingSeedsLabelMapVolume %s',
    ),
    inputTensorVolume=dict(argstr='--inputTensorVolume %s',
    ),
    numberOfThreads=dict(argstr='--numberOfThreads %d',
    ),
    outputCostVolume=dict(argstr='--outputCostVolume %s',
    hash_files=False,
    ),
    outputSpeedVolume=dict(argstr='--outputSpeedVolume %s',
    hash_files=False,
    ),
    seedThreshold=dict(argstr='--seedThreshold %f',
    ),
    startingSeedsLabel=dict(argstr='--startingSeedsLabel %d',
    ),
    stoppingValue=dict(argstr='--stoppingValue %f',
    ),
    )
    inputs = gtractCostFastMarching._input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_gtractCostFastMarching_outputs():
    output_map = dict(outputCostVolume=dict(),
    outputSpeedVolume=dict(),
    )
    outputs = gtractCostFastMarching._output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

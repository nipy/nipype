# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..connectivity import Conmat


def test_Conmat_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='-inputfile %s',
            mandatory=True,
            usedefault=True,
        ),
        output_root=dict(
            argstr='-outputroot %s',
            genfile=True,
            usedefault=True,
        ),
        scalar_file=dict(
            argstr='-scalarfile %s',
            requires=['tract_stat'],
            usedefault=True,
        ),
        target_file=dict(
            argstr='-targetfile %s',
            mandatory=True,
            usedefault=True,
        ),
        targetname_file=dict(
            argstr='-targetnamefile %s',
            usedefault=True,
        ),
        tract_prop=dict(
            argstr='-tractstat %s',
            units='NA',
            xor=['tract_stat'],
        ),
        tract_stat=dict(
            argstr='-tractstat %s',
            requires=['scalar_file'],
            units='NA',
            xor=['tract_prop'],
        ),
    )
    inputs = Conmat.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_Conmat_outputs():
    output_map = dict(
        conmat_sc=dict(usedefault=True, ),
        conmat_ts=dict(usedefault=True, ),
    )
    outputs = Conmat.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

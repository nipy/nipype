# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..dti import DTIRecon


def test_DTIRecon_inputs():
    input_map = dict(
        DWI=dict(
            argstr='%s',
            mandatory=True,
            position=1,
            usedefault=True,
        ),
        args=dict(argstr='%s', ),
        b0_threshold=dict(argstr='-b0_th', ),
        bvals=dict(
            mandatory=True,
            usedefault=True,
        ),
        bvecs=dict(
            argstr='-gm %s',
            mandatory=True,
            usedefault=True,
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        image_orientation_vectors=dict(argstr='-iop %f', ),
        n_averages=dict(argstr='-nex %s', ),
        oblique_correction=dict(argstr='-oc', ),
        out_prefix=dict(
            argstr='%s',
            position=2,
            usedefault=True,
        ),
        output_type=dict(
            argstr='-ot %s',
            usedefault=True,
        ),
    )
    inputs = DTIRecon.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_DTIRecon_outputs():
    output_map = dict(
        ADC=dict(usedefault=True, ),
        B0=dict(usedefault=True, ),
        FA=dict(usedefault=True, ),
        FA_color=dict(usedefault=True, ),
        L1=dict(usedefault=True, ),
        L2=dict(usedefault=True, ),
        L3=dict(usedefault=True, ),
        V1=dict(usedefault=True, ),
        V2=dict(usedefault=True, ),
        V3=dict(usedefault=True, ),
        exp=dict(usedefault=True, ),
        tensor=dict(usedefault=True, ),
    )
    outputs = DTIRecon.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

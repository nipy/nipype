# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..model import Label2Label


def test_Label2Label_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        copy_inputs=dict(),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        hemisphere=dict(
            argstr='--hemi %s',
            mandatory=True,
        ),
        ignore_exception=dict(
            deprecated='1.0.0',
            nohash=True,
            usedefault=True,
        ),
        out_file=dict(
            argstr='--trglabel %s',
            hash_files=False,
            keep_extension=True,
            name_source=['source_label'],
            name_template='%s_converted',
        ),
        registration_method=dict(
            argstr='--regmethod %s',
            usedefault=True,
        ),
        source_label=dict(
            argstr='--srclabel %s',
            mandatory=True,
        ),
        source_sphere_reg=dict(mandatory=True, ),
        source_subject=dict(
            argstr='--srcsubject %s',
            mandatory=True,
        ),
        source_white=dict(mandatory=True, ),
        sphere_reg=dict(mandatory=True, ),
        subject_id=dict(
            argstr='--trgsubject %s',
            mandatory=True,
            usedefault=True,
        ),
        subjects_dir=dict(),
        terminal_output=dict(
            deprecated='1.0.0',
            nohash=True,
        ),
        white=dict(mandatory=True, ),
    )
    inputs = Label2Label.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_Label2Label_outputs():
    output_map = dict(out_file=dict(), )
    outputs = Label2Label.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

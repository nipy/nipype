# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..utils import ParcellationStats


def test_ParcellationStats_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        aseg=dict(
            mandatory=True,
            usedefault=True,
        ),
        brainmask=dict(
            mandatory=True,
            usedefault=True,
        ),
        copy_inputs=dict(),
        cortex_label=dict(usedefault=True, ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        hemisphere=dict(
            argstr='%s',
            mandatory=True,
            position=-2,
        ),
        in_annotation=dict(
            argstr='-a %s',
            xor=['in_label'],
        ),
        in_cortex=dict(argstr='-cortex %s', ),
        in_label=dict(
            argstr='-l %s',
            xor=['in_annotatoin', 'out_color'],
        ),
        lh_pial=dict(
            mandatory=True,
            usedefault=True,
        ),
        lh_white=dict(
            mandatory=True,
            usedefault=True,
        ),
        mgz=dict(argstr='-mgz', ),
        out_color=dict(
            argstr='-c %s',
            genfile=True,
            xor=['in_label'],
        ),
        out_table=dict(
            argstr='-f %s',
            genfile=True,
            requires=['tabular_output'],
        ),
        rh_pial=dict(
            mandatory=True,
            usedefault=True,
        ),
        rh_white=dict(
            mandatory=True,
            usedefault=True,
        ),
        ribbon=dict(
            mandatory=True,
            usedefault=True,
        ),
        subject_id=dict(
            argstr='%s',
            mandatory=True,
            position=-3,
            usedefault=True,
        ),
        subjects_dir=dict(usedefault=True, ),
        surface=dict(
            argstr='%s',
            position=-1,
        ),
        tabular_output=dict(argstr='-b', ),
        th3=dict(
            argstr='-th3',
            requires=['cortex_label'],
        ),
        thickness=dict(
            mandatory=True,
            usedefault=True,
        ),
        transform=dict(
            mandatory=True,
            usedefault=True,
        ),
        wm=dict(
            mandatory=True,
            usedefault=True,
        ),
    )
    inputs = ParcellationStats.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_ParcellationStats_outputs():
    output_map = dict(
        out_color=dict(usedefault=True, ),
        out_table=dict(usedefault=True, ),
    )
    outputs = ParcellationStats.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..preprocess import CANormalize


def test_CANormalize_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        atlas=dict(
            argstr='%s',
            mandatory=True,
            position=-3,
            usedefault=True,
        ),
        control_points=dict(
            argstr='-c %s',
            usedefault=True,
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='%s',
            mandatory=True,
            position=-4,
            usedefault=True,
        ),
        long_file=dict(
            argstr='-long %s',
            usedefault=True,
        ),
        mask=dict(
            argstr='-mask %s',
            usedefault=True,
        ),
        out_file=dict(
            argstr='%s',
            hash_files=False,
            keep_extension=True,
            name_source=['in_file'],
            name_template='%s_norm',
            position=-1,
            usedefault=True,
        ),
        subjects_dir=dict(usedefault=True, ),
        transform=dict(
            argstr='%s',
            mandatory=True,
            position=-2,
            usedefault=True,
        ),
    )
    inputs = CANormalize.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_CANormalize_outputs():
    output_map = dict(
        control_points=dict(usedefault=True, ),
        out_file=dict(),
    )
    outputs = CANormalize.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..utils import VolumeMask


def test_VolumeMask_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        aseg=dict(
            usedefault=True,
            xor=['in_aseg'],
        ),
        copy_inputs=dict(),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        in_aseg=dict(
            argstr='--aseg_name %s',
            usedefault=True,
            xor=['aseg'],
        ),
        left_ribbonlabel=dict(
            argstr='--label_left_ribbon %d',
            mandatory=True,
        ),
        left_whitelabel=dict(
            argstr='--label_left_white %d',
            mandatory=True,
        ),
        lh_pial=dict(
            mandatory=True,
            usedefault=True,
        ),
        lh_white=dict(
            mandatory=True,
            usedefault=True,
        ),
        rh_pial=dict(
            mandatory=True,
            usedefault=True,
        ),
        rh_white=dict(
            mandatory=True,
            usedefault=True,
        ),
        right_ribbonlabel=dict(
            argstr='--label_right_ribbon %d',
            mandatory=True,
        ),
        right_whitelabel=dict(
            argstr='--label_right_white %d',
            mandatory=True,
        ),
        save_ribbon=dict(argstr='--save_ribbon', ),
        subject_id=dict(
            argstr='%s',
            mandatory=True,
            position=-1,
            usedefault=True,
        ),
        subjects_dir=dict(usedefault=True, ),
    )
    inputs = VolumeMask.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_VolumeMask_outputs():
    output_map = dict(
        lh_ribbon=dict(usedefault=True, ),
        out_ribbon=dict(usedefault=True, ),
        rh_ribbon=dict(usedefault=True, ),
    )
    outputs = VolumeMask.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..brainsuite import Dfs


def test_Dfs_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    curvatureWeighting=dict(argstr='-w %f',
    usedefault=True,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    inputShadingVolume=dict(argstr='-c %s',
    ),
    inputVolumeFile=dict(argstr='-i %s',
    mandatory=True,
    ),
    noNormalsFlag=dict(argstr='--nonormals',
    ),
    nonZeroTessellation=dict(argstr='-nz',
    xor=(u'nonZeroTessellation', u'specialTessellation'),
    ),
    outputSurfaceFile=dict(argstr='-o %s',
    genfile=True,
    ),
    postSmoothFlag=dict(argstr='--postsmooth',
    ),
    scalingPercentile=dict(argstr='-f %f',
    ),
    smoothingConstant=dict(argstr='-a %f',
    usedefault=True,
    ),
    smoothingIterations=dict(argstr='-n %d',
    usedefault=True,
    ),
    specialTessellation=dict(argstr='%s',
    position=-1,
    requires=[u'tessellationThreshold'],
    xor=(u'nonZeroTessellation', u'specialTessellation'),
    ),
    terminal_output=dict(nohash=True,
    ),
    tessellationThreshold=dict(argstr='%f',
    ),
    timer=dict(argstr='--timer',
    ),
    verbosity=dict(argstr='-v %d',
    ),
    zeroPadFlag=dict(argstr='-z',
    ),
    )
    inputs = Dfs.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_Dfs_outputs():
    output_map = dict(outputSurfaceFile=dict(),
    )
    outputs = Dfs.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

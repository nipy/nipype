# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..utils import NwarpApply


def test_NwarpApply_inputs():
    input_map = dict(
        ainterp=dict(argstr='-ainterp %s', ),
        args=dict(argstr='%s', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        ignore_exception=dict(
            deprecated='1.0.0',
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='-source %s',
            mandatory=True,
        ),
        interp=dict(argstr='-interp %s', ),
        inv_warp=dict(argstr='-iwarp', ),
        master=dict(argstr='-master %s', ),
        out_file=dict(
            argstr='-prefix %s',
            name_source='in_file',
            name_template='%s_Nwarp',
        ),
        quiet=dict(
            argstr='-quiet',
            xor=['verb'],
        ),
        short=dict(argstr='-short', ),
        terminal_output=dict(
            deprecated='1.0.0',
            nohash=True,
        ),
        verb=dict(
            argstr='-verb',
            xor=['quiet'],
        ),
        warp=dict(
            argstr='-nwarp %s',
            mandatory=True,
        ),
    )
    inputs = NwarpApply.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_NwarpApply_outputs():
    output_map = dict(out_file=dict(), )
    outputs = NwarpApply.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

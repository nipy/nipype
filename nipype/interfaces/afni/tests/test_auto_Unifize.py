# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..utils import Unifize


def test_Unifize_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        cl_frac=dict(argstr='-clfrac %f', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        epi=dict(
            argstr='-EPI',
            requires=['no_duplo', 't2'],
            xor=['gm'],
        ),
        gm=dict(argstr='-GM', ),
        ignore_exception=dict(
            deprecated='1.0.0',
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='-input %s',
            copyfile=False,
            mandatory=True,
            position=-1,
        ),
        no_duplo=dict(argstr='-noduplo', ),
        num_threads=dict(
            nohash=True,
            usedefault=True,
        ),
        out_file=dict(
            argstr='-prefix %s',
            name_source='in_file',
            name_template='%s_unifized',
        ),
        outputtype=dict(),
        quiet=dict(argstr='-quiet', ),
        rbt=dict(argstr='-rbt %f %f %f', ),
        scale_file=dict(argstr='-ssave %s', ),
        t2=dict(argstr='-T2', ),
        t2_up=dict(argstr='-T2up %f', ),
        terminal_output=dict(
            deprecated='1.0.0',
            nohash=True,
        ),
        urad=dict(argstr='-Urad %s', ),
    )
    inputs = Unifize.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_Unifize_outputs():
    output_map = dict(
        out_file=dict(),
        scale_file=dict(),
    )
    outputs = Unifize.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

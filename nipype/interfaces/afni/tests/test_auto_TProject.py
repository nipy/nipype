# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..preprocess import TProject


def test_TProject_inputs():
    input_map = dict(
        TR=dict(argstr='-TR %g', ),
        args=dict(argstr='%s', ),
        automask=dict(
            argstr='-automask',
            xor=['mask'],
        ),
        bandpass=dict(argstr='-bandpass %g %g', ),
        blur=dict(argstr='-blur %g', ),
        cenmode=dict(argstr='-cenmode %s', ),
        censor=dict(argstr='-censor %s', ),
        censortr=dict(argstr='-CENSORTR %s', ),
        concat=dict(argstr='-concat %s', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        ignore_exception=dict(
            deprecated='1.0.0',
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='-input %s',
            copyfile=False,
            mandatory=True,
            position=1,
        ),
        mask=dict(
            argstr='-mask %s',
            exist=True,
        ),
        noblock=dict(argstr='-noblock', ),
        norm=dict(argstr='-norm', ),
        num_threads=dict(
            nohash=True,
            usedefault=True,
        ),
        ort=dict(argstr='-ort %s', ),
        out_file=dict(
            argstr='-prefix %s',
            name_source='in_file',
            name_template='%s_tproject',
            position=-1,
        ),
        outputtype=dict(),
        polort=dict(argstr='-polort %d', ),
        stopband=dict(argstr='-stopband %g %g', ),
        terminal_output=dict(
            deprecated='1.0.0',
            nohash=True,
        ),
    )
    inputs = TProject.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_TProject_outputs():
    output_map = dict(out_file=dict(), )
    outputs = TProject.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

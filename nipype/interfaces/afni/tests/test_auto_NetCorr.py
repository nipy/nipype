# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ..preprocess import NetCorr


def test_NetCorr_inputs():
    input_map = dict(
        args=dict(
            argstr="%s",
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        fish_z=dict(
            argstr="-fish_z",
        ),
        ignore_LT=dict(
            argstr="-ignore_LT",
        ),
        in_file=dict(
            argstr="-inset %s",
            extensions=None,
            mandatory=True,
        ),
        in_rois=dict(
            argstr="-in_rois %s",
            extensions=None,
            mandatory=True,
        ),
        mask=dict(
            argstr="-mask %s",
            extensions=None,
        ),
        nifti=dict(
            argstr="-nifti",
        ),
        num_threads=dict(
            nohash=True,
            usedefault=True,
        ),
        out_file=dict(
            argstr="-prefix %s",
            extensions=None,
            name_source="in_file",
            name_template="%s_netcorr",
            position=1,
        ),
        output_mask_nonnull=dict(
            argstr="-output_mask_nonnull",
        ),
        outputtype=dict(),
        part_corr=dict(
            argstr="-part_corr",
        ),
        push_thru_many_zeros=dict(
            argstr="-push_thru_many_zeros",
        ),
        ts_indiv=dict(
            argstr="-ts_indiv",
        ),
        ts_label=dict(
            argstr="-ts_label",
        ),
        ts_out=dict(
            argstr="-ts_out",
        ),
        ts_wb_Z=dict(
            argstr="-ts_wb_Z",
        ),
        ts_wb_corr=dict(
            argstr="-ts_wb_corr",
        ),
        ts_wb_strlabel=dict(
            argstr="-ts_wb_strlabel",
        ),
        weight_ts=dict(
            argstr="-weight_ts %s",
            extensions=None,
        ),
    )
    inputs = NetCorr.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value


def test_NetCorr_outputs():
    output_map = dict(
        out_corr_maps=dict(),
        out_corr_matrix=dict(
            extensions=None,
        ),
    )
    outputs = NetCorr.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..preprocess import QualityIndex


def test_QualityIndex_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    autoclip=dict(argstr='-autoclip',
    usedefault=True,
    xor=[u'mask'],
    ),
    automask=dict(argstr='-automask',
    usedefault=True,
    xor=[u'mask'],
    ),
    clip=dict(argstr='-clip %f',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    in_file=dict(argstr='%s',
    mandatory=True,
    position=-2,
    ),
    interval=dict(argstr='-range',
    usedefault=True,
    ),
    mask=dict(argstr='-mask %s',
    xor=[u'autoclip', u'automask'],
    ),
    out_file=dict(argstr='> %s',
    keep_extension=False,
    name_source=[u'in_file'],
    name_template='%s_tqual',
    position=-1,
    ),
    quadrant=dict(argstr='-quadrant',
    usedefault=True,
    ),
    spearman=dict(argstr='-spearman',
    usedefault=True,
    ),
    terminal_output=dict(nohash=True,
    ),
    )
    inputs = QualityIndex.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_QualityIndex_outputs():
    output_map = dict(out_file=dict(),
    )
    outputs = QualityIndex.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

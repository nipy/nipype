# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..epi import Eddy


def test_Eddy_inputs():
    input_map = dict(
        args=dict(argstr='%s', ),
        cnr_maps=dict(
            argstr='--cnr_maps',
            min_ver='5.0.10',
        ),
        dont_peas=dict(argstr='--dont_peas', ),
        dont_sep_offs_move=dict(argstr='--dont_sep_offs_move', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        fep=dict(argstr='--fep', ),
        field=dict(argstr='--field=%s', ),
        field_mat=dict(
            argstr='--field_mat=%s',
            usedefault=True,
        ),
        flm=dict(argstr='--flm=%s', ),
        fudge_factor=dict(
            argstr='--ff=%s',
            usedefault=True,
        ),
        fwhm=dict(argstr='--fwhm=%s', ),
        in_acqp=dict(
            argstr='--acqp=%s',
            mandatory=True,
            usedefault=True,
        ),
        in_bval=dict(
            argstr='--bvals=%s',
            mandatory=True,
            usedefault=True,
        ),
        in_bvec=dict(
            argstr='--bvecs=%s',
            mandatory=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='--imain=%s',
            mandatory=True,
            usedefault=True,
        ),
        in_index=dict(
            argstr='--index=%s',
            mandatory=True,
            usedefault=True,
        ),
        in_mask=dict(
            argstr='--mask=%s',
            mandatory=True,
            usedefault=True,
        ),
        in_topup_fieldcoef=dict(
            argstr='--topup=%s',
            requires=['in_topup_movpar'],
            usedefault=True,
        ),
        in_topup_movpar=dict(
            requires=['in_topup_fieldcoef'],
            usedefault=True,
        ),
        interp=dict(argstr='--interp=%s', ),
        is_shelled=dict(argstr='--data_is_shelled', ),
        method=dict(argstr='--resamp=%s', ),
        niter=dict(
            argstr='--niter=%s',
            usedefault=True,
        ),
        num_threads=dict(
            nohash=True,
            usedefault=True,
        ),
        nvoxhp=dict(
            argstr='--nvoxhp=%s',
            usedefault=True,
        ),
        out_base=dict(
            argstr='--out=%s',
            usedefault=True,
        ),
        output_type=dict(),
        repol=dict(argstr='--repol', ),
        residuals=dict(
            argstr='--residuals',
            min_ver='5.0.10',
        ),
        session=dict(
            argstr='--session=%s',
            usedefault=True,
        ),
        slm=dict(argstr='--slm=%s', ),
        use_cuda=dict(),
    )
    inputs = Eddy.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_Eddy_outputs():
    output_map = dict(
        out_cnr_maps=dict(usedefault=True, ),
        out_corrected=dict(usedefault=True, ),
        out_movement_rms=dict(usedefault=True, ),
        out_outlier_report=dict(usedefault=True, ),
        out_parameter=dict(usedefault=True, ),
        out_residuals=dict(usedefault=True, ),
        out_restricted_movement_rms=dict(usedefault=True, ),
        out_rotated_bvecs=dict(usedefault=True, ),
        out_shell_alignment_parameters=dict(usedefault=True, ),
    )
    outputs = Eddy.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

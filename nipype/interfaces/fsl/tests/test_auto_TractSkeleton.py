# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ..dti import TractSkeleton


def test_TractSkeleton_inputs():
    input_map = dict(
        alt_data_file=dict(
            argstr="-a %s",
            extensions=None,
        ),
        alt_skeleton=dict(
            argstr="-s %s",
            extensions=None,
        ),
        args=dict(
            argstr="%s",
        ),
        data_file=dict(
            extensions=None,
        ),
        distance_map=dict(
            extensions=None,
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr="-i %s",
            extensions=None,
            mandatory=True,
        ),
        output_type=dict(),
        project_data=dict(
            argstr="-p %.3f %s %s %s %s",
            requires=["threshold", "distance_map", "data_file"],
        ),
        projected_data=dict(
            extensions=None,
        ),
        search_mask_file=dict(
            extensions=None,
            xor=["use_cingulum_mask"],
        ),
        skeleton_file=dict(
            argstr="-o %s",
        ),
        threshold=dict(),
        use_cingulum_mask=dict(
            usedefault=True,
            xor=["search_mask_file"],
        ),
    )
    inputs = TractSkeleton.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value


def test_TractSkeleton_outputs():
    output_map = dict(
        projected_data=dict(
            extensions=None,
        ),
        skeleton_file=dict(
            extensions=None,
        ),
    )
    outputs = TractSkeleton.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

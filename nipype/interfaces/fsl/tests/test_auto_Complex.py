# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..utils import Complex


def test_Complex_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    complex_cartesian=dict(argstr='-complex',
    position=1,
    xor=[u'real_polar', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    complex_in_file=dict(argstr='%s',
    position=2,
    ),
    complex_in_file2=dict(argstr='%s',
    position=3,
    ),
    complex_merge=dict(argstr='-complexmerge',
    position=1,
    xor=[u'real_polar', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge', u'start_vol', u'end_vol'],
    ),
    complex_out_file=dict(argstr='%s',
    genfile=True,
    position=-3,
    xor=[u'complex_out_file', u'magnitude_out_file', u'phase_out_file', u'real_out_file', u'imaginary_out_file', u'real_polar', u'real_cartesian'],
    ),
    complex_polar=dict(argstr='-complexpolar',
    position=1,
    xor=[u'real_polar', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    complex_split=dict(argstr='-complexsplit',
    position=1,
    xor=[u'real_polar', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    end_vol=dict(argstr='%d',
    position=-1,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    imaginary_in_file=dict(argstr='%s',
    position=3,
    ),
    imaginary_out_file=dict(argstr='%s',
    genfile=True,
    position=-3,
    xor=[u'complex_out_file', u'magnitude_out_file', u'phase_out_file', u'real_polar', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    magnitude_in_file=dict(argstr='%s',
    position=2,
    ),
    magnitude_out_file=dict(argstr='%s',
    genfile=True,
    position=-4,
    xor=[u'complex_out_file', u'real_out_file', u'imaginary_out_file', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    output_type=dict(),
    phase_in_file=dict(argstr='%s',
    position=3,
    ),
    phase_out_file=dict(argstr='%s',
    genfile=True,
    position=-3,
    xor=[u'complex_out_file', u'real_out_file', u'imaginary_out_file', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    real_cartesian=dict(argstr='-realcartesian',
    position=1,
    xor=[u'real_polar', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    real_in_file=dict(argstr='%s',
    position=2,
    ),
    real_out_file=dict(argstr='%s',
    genfile=True,
    position=-4,
    xor=[u'complex_out_file', u'magnitude_out_file', u'phase_out_file', u'real_polar', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    real_polar=dict(argstr='-realpolar',
    position=1,
    xor=[u'real_polar', u'real_cartesian', u'complex_cartesian', u'complex_polar', u'complex_split', u'complex_merge'],
    ),
    start_vol=dict(argstr='%d',
    position=-2,
    ),
    terminal_output=dict(nohash=True,
    ),
    )
    inputs = Complex.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_Complex_outputs():
    output_map = dict(complex_out_file=dict(),
    imaginary_out_file=dict(),
    magnitude_out_file=dict(),
    phase_out_file=dict(),
    real_out_file=dict(),
    )
    outputs = Complex.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

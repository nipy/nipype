# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..dti import VecReg


def test_VecReg_inputs():
    input_map = dict(
        affine_mat=dict(
            argstr='-t %s',
            usedefault=True,
        ),
        args=dict(argstr='%s', ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr='-i %s',
            mandatory=True,
            usedefault=True,
        ),
        interpolation=dict(argstr='--interp=%s', ),
        mask=dict(
            argstr='-m %s',
            usedefault=True,
        ),
        out_file=dict(
            argstr='-o %s',
            genfile=True,
            hash_files=False,
            usedefault=True,
        ),
        output_type=dict(),
        ref_mask=dict(
            argstr='--refmask=%s',
            usedefault=True,
        ),
        ref_vol=dict(
            argstr='-r %s',
            mandatory=True,
            usedefault=True,
        ),
        rotation_mat=dict(
            argstr='--rotmat=%s',
            usedefault=True,
        ),
        rotation_warp=dict(
            argstr='--rotwarp=%s',
            usedefault=True,
        ),
        warp_field=dict(
            argstr='-w %s',
            usedefault=True,
        ),
    )
    inputs = VecReg.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_VecReg_outputs():
    output_map = dict(out_file=dict(usedefault=True, ), )
    outputs = VecReg.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

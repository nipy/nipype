# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ..minc import Blob


def test_Blob_inputs():
    input_map = dict(
        args=dict(
            argstr="%s",
        ),
        determinant=dict(
            argstr="-determinant",
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        input_file=dict(
            argstr="%s",
            extensions=None,
            mandatory=True,
            position=-2,
        ),
        magnitude=dict(
            argstr="-magnitude",
        ),
        output_file=dict(
            argstr="%s",
            extensions=None,
            genfile=True,
            hash_files=False,
            name_source=["input_file"],
            name_template="%s_blob.mnc",
            position=-1,
        ),
        trace=dict(
            argstr="-trace",
        ),
        translation=dict(
            argstr="-translation",
        ),
    )
    inputs = Blob.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value


def test_Blob_outputs():
    output_map = dict(
        output_file=dict(
            extensions=None,
        ),
    )
    outputs = Blob.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

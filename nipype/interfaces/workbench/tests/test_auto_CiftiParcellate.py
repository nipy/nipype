# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ..cifti import CiftiParcellate


def test_CiftiParcellate_inputs():
    input_map = dict(
        args=dict(
            argstr="%s",
        ),
        atlas_label=dict(
            argstr="%s ",
            mandatory=True,
            position=1,
        ),
        cerebellum_area_metric=dict(
            argstr="-cerebellum-area-metric %s",
            extensions=None,
            position=10,
        ),
        cerebellum_area_surf=dict(
            argstr="-cerebellum-area-surf %s",
            extensions=None,
            position=7,
        ),
        cifti_weights=dict(
            argstr="-cifti-weights %s",
            extensions=None,
            position=11,
        ),
        cor_method=dict(
            argstr="-method %s",
            position=12,
        ),
        direction=dict(
            argstr="%s ",
            mandatory=True,
            position=2,
        ),
        environ=dict(
            nohash=True,
            usedefault=True,
        ),
        in_file=dict(
            argstr="%s ",
            extensions=None,
            mandatory=True,
            position=0,
        ),
        left_area_metric=dict(
            argstr="-left-area-metric %s",
            extensions=None,
            position=8,
        ),
        left_area_surf=dict(
            argstr="-left-area-surface %s",
            extensions=None,
            position=5,
        ),
        out_file=dict(
            argstr=" %s",
            extensions=None,
            keep_extension=True,
            name_source=["in_file"],
            name_template="parcelated_%s.nii",
            position=3,
        ),
        right_area_metric=dict(
            argstr="-right-area-metric %s",
            extensions=None,
            position=9,
        ),
        right_area_surf=dict(
            argstr="-right-area-surface %s",
            extensions=None,
            position=6,
        ),
        spatial_weights=dict(
            argstr="-spatial-weights ",
            position=4,
        ),
    )
    inputs = CiftiParcellate.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value


def test_CiftiParcellate_outputs():
    output_map = dict(
        out_file=dict(
            extensions=None,
        ),
    )
    outputs = CiftiParcellate.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

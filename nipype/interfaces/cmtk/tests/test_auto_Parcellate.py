# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..parcellation import Parcellate


def test_Parcellate_inputs():
    input_map = dict(
        dilation=dict(usedefault=True, ),
        freesurfer_dir=dict(usedefault=True, ),
        out_roi_file=dict(
            genfile=True,
            usedefault=True,
        ),
        parcellation_name=dict(usedefault=True, ),
        subject_id=dict(mandatory=True, ),
        subjects_dir=dict(usedefault=True, ),
    )
    inputs = Parcellate.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_Parcellate_outputs():
    output_map = dict(
        aseg_file=dict(usedefault=True, ),
        cc_unknown_file=dict(usedefault=True, ),
        dilated_roi_file_in_structural_space=dict(usedefault=True, ),
        ribbon_file=dict(usedefault=True, ),
        roi_file=dict(usedefault=True, ),
        roi_file_in_structural_space=dict(usedefault=True, ),
        roiv_file=dict(usedefault=True, ),
        white_matter_mask_file=dict(usedefault=True, ),
    )
    outputs = Parcellate.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value

dependencies:
  cache_directories:
    - "~/.apt-cache"
    - "~/examples/data"
    - "~/examples/fsdata"
    - "~/mcr"
    - "~/spm12"
    - "~/examples/fsl_course_data"
  pre:
    # Let CircleCI cache the apt archive
    - sudo rm -rf /var/cache/apt/archives && sudo ln -s ~/.apt-cache /var/cache/apt/archives && mkdir -p ~/.apt-cache/partial
    - wget -O- http://neuro.debian.net/lists/precise.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
    - sudo apt-key adv --recv-keys --keyserver hkp://pgp.mit.edu:80 0xA5D32F012649A5A9
    - sudo apt-get update
  override:
    # Install apt packages
    - sudo apt-get install -y fsl-core fsl-atlases fsl-mni152-templates fsl-feeds afni
    - echo "source /etc/fsl/fsl.sh" >> $HOME/.profile
    - echo "source /etc/afni/afni.sh" >> $HOME/.profile
    - mkdir -p ~/examples/ && ln -sf /usr/share/fsl-feeds/ ~/examples/feeds
    # Set up python environment
    - pip install --upgrade pip
    - pip install -e .
    - pip install matplotlib sphinx ipython boto coverage
    - gem install fakes3
    - if [[ ! -d ~/examples/data ]]; then wget "http://tcpdiag.dl.sourceforge.net/project/nipy/nipype/nipype-0.2/nipype-tutorial.tar.bz2" && tar jxvf nipype-tutorial.tar.bz2 && mv nipype-tutorial/* ~/examples/; fi
    - if [[ ! -d ~/examples/fsl_course_data ]]; then wget -c "http://fsl.fmrib.ox.ac.uk/fslcourse/fdt1.tar.gz" && wget -c "http://fsl.fmrib.ox.ac.uk/fslcourse/fdt2.tar.gz" && wget -c "http://fsl.fmrib.ox.ac.uk/fslcourse/tbss.tar.gz" && mkdir ~/examples/fsl_course_data && tar zxvf fdt1.tar.gz -C ~/examples/fsl_course_data && tar zxvf fdt2.tar.gz -C ~/examples/fsl_course_data && tar zxvf tbss.tar.gz -C ~/examples/fsl_course_data; fi
    - bash ~/nipype/tools/install_spm_mcr.sh
    - mkdir -p ~/.nipype && echo '[logging]' > ~/.nipype/nipype.cfg && echo 'workflow_level = DEBUG' >> ~/.nipype/nipype.cfg && echo 'interface_level = DEBUG' >> ~/.nipype/nipype.cfg && echo 'filemanip_level = DEBUG' >> ~/.nipype/nipype.cfg
machine:
  environment:
    FSLOUTPUTTYPE: NIFTI_GZ
test:
  override:
    - mkdir -p ${CIRCLE_TEST_REPORTS}/nose
    - source $HOME/.profile; nosetests --with-doctest --xunit-file="${CIRCLE_TEST_REPORTS}/nose/${CIRCLE_PROJECT_REPONAME}.xml" -c ./.noserc --logging-level=DEBUG --verbosity=3:
        environment:
          SPMMCRCMD: "$HOME/spm12/run_spm12.sh $HOME/mcr/v85/ script"
          FORCE_SPMMCR: 1
          FSL_COURSE_DATA: "$HOME/examples/fsl_course_data"
        timeout: 2600
    - set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt
    - cat ~/log.txt && if grep -q "ERROR" ~/log.txt; then false; else true; fi
    - source $HOME/.profile; python ~/nipype/tools/run_examples.py test_spm Linear workflow3d workflow4d:
        pwd: ../examples
        environment:
          SPMMCRCMD: "$HOME/spm12/run_spm12.sh $HOME/mcr/v85/ script"
          FORCE_SPMMCR: 1
        timeout: 1600
    - source $HOME/.profile; python ~/nipype/tools/run_examples.py fmri_fsl_feeds Linear l1pipeline:
        pwd: ../examples
    - source $HOME/.profile; python ~/nipype/tools/run_examples.py fmri_spm_dartel Linear level1 l2pipeline:
        pwd: ../examples
        environment:
          SPMMCRCMD: "$HOME/spm12/run_spm12.sh $HOME/mcr/v85/ script"
          FORCE_SPMMCR: 1
        timeout: 1600
    - source $HOME/.profile; python ~/nipype/tools/run_examples.py fmri_fsl_reuse Linear level1_workflow:
        pwd: ../examples
    - source $HOME/.profile; python ~/nipype/tools/run_examples.py fmri_spm_nested Linear level1 l2pipeline:
        pwd: ../examples
        environment:
          SPMMCRCMD: "$HOME/spm12/run_spm12.sh $HOME/mcr/v85/ script"
          FORCE_SPMMCR: 1

general:
  artifacts:
    - "doc/_build/html"
    - "~/log.txt"
    - "nosetests.xml"
    - "coverage.xml"
